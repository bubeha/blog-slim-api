version: "3.7"

services:
  frontend:
    build:
      context: frontend/docker/development/nginx

  nodejs:
    build:
      context: frontend/docker/development/nodejs
    user: "$_UID:$_GID"
    volumes:
      - ./frontend:/application
      - ~/.yarnrc:/.yarnrc
    command: sh -c "yarn start"
    ports:
    - "3000:3000"

  php-fpm:
    build:
      context: ./api/.docker
      dockerfile: php-fpm/Dockerfile
      args:
        PHP_VERSION: 8
        XDEBUG_VERSION: 3.0.1
    user: "$_UID:$_GID"
    volumes:
      - "./api:/application"
    links:
      - postgres
    depends_on:
      - postgres
      - api
    environment:
      PHP_IDE_CONFIG: "serverName=docker"

  php-cli:
    build:
      context: ./api/.docker
      dockerfile: php-cli/Dockerfile
      args:
        PHP_VERSION: 8
        XDEBUG_VERSION: 3.0.1
    user: "$_UID:$_GID"
    volumes:
      - "./api:/application"
      - "~/.config/composer:/.config/composer"
      - "~/.cache/composer:/.cache/composer"
    links:
      - postgres
    depends_on:
      - postgres
    environment:
      PHP_IDE_CONFIG: "serverName=docker"

  api:
    build:
      context: ./api/.docker/nginx
    volumes:
      - "./api:/application"
    ports:
      - "8080:80"

  postgres:
    image: "postgres:12-alpine"
    environment:
      - "POSTGRES_USER=$POSTGRES_USER"
      - "POSTGRES_PASSWORD=$POSTGRES_PASSWORD"
      - "POSTGRES_DB=$POSTGRES_DB"
    ports:
      - "5432:5432"
    volumes:
      - api-postgres:/var/lib/postgresql/data

volumes:
  api-postgres:
